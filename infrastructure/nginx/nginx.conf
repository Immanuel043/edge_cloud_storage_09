user  nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 10240; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  client_max_body_size 0;

  # upstream to FastAPI (adjust host:port per your compose / k8s)
  upstream fastapi_upstream {
    server fastapi:8000;   # use service name in docker-compose; in prod use load balancer
  }

  server {
    listen 80;
    server_name _;  # change to FQDN in prod

    # Proxy API calls to FastAPI
    location /api/ {
      proxy_pass http://fastapi_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Streaming large responses
      proxy_buffering off;
      proxy_request_buffering off;
      proxy_read_timeout 3600s;
    }

    # Static / frontend (optional) - serve built frontend if you want
    location / {
      root /usr/share/nginx/html;  # mount frontend build here if desired
      try_files $uri $uri/ =404;
    }

    # Internal protected location used with X-Accel-Redirect
    location /internal_protected/ {
      internal;
      alias /app/storage/;   # Map /internal_protected/<path> -> /app/storage/<path>
      # Performance
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      # Optional directio for very large files:
      # directio 4m;
    }
  }
}
